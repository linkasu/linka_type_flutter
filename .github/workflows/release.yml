name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'  # Запускается при создании тега вида v1.0.0

env:
  FLUTTER_VERSION: '3.35.3'

jobs:
  build-android-release:
    name: Build Signed Android App Bundle
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.pub-cache
          .dart_tool
        key: ${{ runner.os }}-deps-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-deps-
          
    - name: Get dependencies
      run: flutter pub get
      
    - name: Decode keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks
        
    - name: Configure signing
      run: |
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "storeFile=../app/upload-keystore.jks" >> android/key.properties
        
    - name: Build Android App Bundle
      run: flutter build appbundle --release
      
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Rename AAB with version
      run: |
        cp build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/linka-napishi-${{ steps.version.outputs.version }}.aab
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: LINKa напиши ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/bundle/release/linka-napishi-${{ steps.version.outputs.version }}.aab
        asset_name: linka-napishi-${{ steps.version.outputs.version }}.aab
        asset_content_type: application/octet-stream
